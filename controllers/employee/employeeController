const asyncHandler = require('express-async-handler');
const employeeProfile = require('../../models/employee/employeeModel');

const getEmployees = asyncHandler (async (req, res) => {
    const allEmployees = await employeeProfile.find({user_id: req.user.id});
    if(allEmployees){  
    res.status(200).json(allEmployees);
    }else{
        res.status(404);
        throw new Error("No employees found");
    }
 });

const createEmployee = asyncHandler (async (req, res) => {
    console.log('The request body',req.body);
    const {name, email, phone, skills, experience, education, jobPreferences, projects} = req.body;
    if(!name || !email || !phone) {
         res.status(400);
         throw new Error("Please provide name, email and phone");         
    }     
    employeeProfile.create({ 
        user_id: req.user.id,       
        name,
        email,
        phone,
        skills,
        experience,        
        education,
        projects,
        jobPreferences,
    }).then((employeeDetails) => {
        res.status(201).json(employeeDetails);
    }).catch((error) => {
        res.status(400);
        console.log(error);
        throw new Error("Employee not created");
    });   
});

const getEmployee = asyncHandler( async (req, res) => {
    const employeeID = req.params.id;    
    const employeeDetailObj = await employeeProfile.findById(employeeID);
    if(!employeeDetailObj){
        res.status(404);
        throw new Error("Employee not found");
    }  

    if(employeeDetailObj.user_id.toString() !== req.user.id){
        res.status(401);
        throw new Error("User not authorized to update this contact");
    }  
    res.status(200).json(employeeDetailObj);
});

const updateEmployee = asyncHandler( async (req, res) => {
    const employeeID = req.params.id;    
    const employeeDetailObj = await employeeProfile.findById(employeeID);
    if(!employeeDetailObj){
        res.status(404);
        throw new Error("Employee not found");
    } 
    
    if(employeeDetailObj.user_id.toString() !== req.user.id){
        res.status(401);
        throw new Error("User not authorized to update this contact");
    }
    
    await employeeProfile.findByIdAndUpdate(employeeID, req.body, {new: true}).then((employeeDetails) => {
        res.status(200).json(employeeDetails);
    }).catch((error) => {
        res.status(400);
        throw new Error("Employee not updated");
    });    
});

const deleteEmployee = asyncHandler( async (req, res) => {
    const employeeID = req.params.id;    
    const employeeDetailObj = await employeeProfile.findById(employeeID);
    if(!employeeDetailObj){
        res.status(404);
        throw new Error("Employee not found");
    } 
    if(employeeDetailObj.user_id.toString() !== req.user.id){
        res.status(401);
        throw new Error("User not authorized to delete this Employee");
    }
    await employeeProfile.deleteOne(employeeDetailObj).then(() => {
        res.status(200).json({ message: `Employee with id ${employeeID} deleted successfully`});
    }).catch((error) => {
        res.status(400);
        throw new Error("Employee not deleted");
    });     
});

module.exports = {getEmployees, getEmployee, updateEmployee, createEmployee, deleteEmployee};